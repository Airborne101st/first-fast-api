name: CI/CD Pipeline

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: admin123
        options: >-
          --mount type=volume,source=mongo_data,target=/data/db
          --mount type=bind,source=${{ github.workspace }}/init-db.js,target=/docker-entrypoint-initdb.d/init-db.js

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to Docker Hub (optional, if pushing images)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build Docker images
    - name: Build frontend image
      run: docker build ./frontend -t my-app-frontend

    - name: Build backend image
      run: docker build ./backend -t my-app-backend

    # Run Docker Compose (MongoDB, Backend, and Frontend)
    - name: Run Docker Compose
      run: docker-compose -f docker-compose.yml up --build -d

    # Wait for MongoDB to be ready
    - name: Wait for MongoDB to be ready
      run: |
        until curl http://localhost:27017; do echo waiting for mongodb; sleep 5; done

    # Verify Backend and Frontend are running
    - name: Verify Backend
      run: curl --fail http://localhost:8000 || exit 1

    - name: Verify Frontend
      run: curl --fail http://localhost:3000 || exit 1

    # Tear down services after the job is done
    - name: Tear down Docker Compose
      if: always()
      run: docker-compose down
